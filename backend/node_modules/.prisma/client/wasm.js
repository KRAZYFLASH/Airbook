
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  phone: 'phone',
  dateOfBirth: 'dateOfBirth',
  nationality: 'nationality',
  passportNumber: 'passportNumber',
  role: 'role',
  isActive: 'isActive',
  isVerified: 'isVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CountryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  continent: 'continent',
  currency: 'currency',
  timezone: 'timezone',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  countryId: 'countryId',
  state: 'state',
  population: 'population',
  timezone: 'timezone',
  lat: 'lat',
  lon: 'lon',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AirportScalarFieldEnum = {
  id: 'id',
  name: 'name',
  iataCode: 'iataCode',
  icaoCode: 'icaoCode',
  cityId: 'cityId',
  countryId: 'countryId',
  municipality: 'municipality',
  lat: 'lat',
  lon: 'lon',
  elevation: 'elevation',
  timezone: 'timezone',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AirlineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  icaoCode: 'icaoCode',
  countryId: 'countryId',
  logo: 'logo',
  description: 'description',
  website: 'website',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AircraftTypeScalarFieldEnum = {
  id: 'id',
  manufacturer: 'manufacturer',
  model: 'model',
  variant: 'variant',
  capacity: 'capacity',
  range: 'range',
  cruiseSpeed: 'cruiseSpeed',
  fuelCapacity: 'fuelCapacity',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AircraftScalarFieldEnum = {
  id: 'id',
  registration: 'registration',
  airlineId: 'airlineId',
  aircraftTypeId: 'aircraftTypeId',
  name: 'name',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DestinationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cityId: 'cityId',
  countryId: 'countryId',
  airportId: 'airportId',
  description: 'description',
  imageUrl: 'imageUrl',
  category: 'category',
  rating: 'rating',
  isActive: 'isActive',
  isFeatured: 'isFeatured',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FlightScalarFieldEnum = {
  id: 'id',
  flightNumber: 'flightNumber',
  airlineId: 'airlineId',
  aircraftId: 'aircraftId',
  departureAirportId: 'departureAirportId',
  arrivalAirportId: 'arrivalAirportId',
  departureTime: 'departureTime',
  arrivalTime: 'arrivalTime',
  duration: 'duration',
  distance: 'distance',
  status: 'status',
  gate: 'gate',
  terminal: 'terminal',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FlightScheduleScalarFieldEnum = {
  id: 'id',
  flightId: 'flightId',
  classType: 'classType',
  availableSeats: 'availableSeats',
  totalSeats: 'totalSeats',
  basePrice: 'basePrice',
  currentPrice: 'currentPrice',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  bookingReference: 'bookingReference',
  userId: 'userId',
  flightId: 'flightId',
  flightScheduleId: 'flightScheduleId',
  destinationId: 'destinationId',
  fromDestinationId: 'fromDestinationId',
  departureDate: 'departureDate',
  returnDate: 'returnDate',
  passengerCount: 'passengerCount',
  bookingClass: 'bookingClass',
  totalPrice: 'totalPrice',
  taxes: 'taxes',
  fees: 'fees',
  discountAmount: 'discountAmount',
  finalPrice: 'finalPrice',
  status: 'status',
  paymentStatus: 'paymentStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PassengerDetailScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  title: 'title',
  firstName: 'firstName',
  lastName: 'lastName',
  dateOfBirth: 'dateOfBirth',
  nationality: 'nationality',
  passportNumber: 'passportNumber',
  passportExpiry: 'passportExpiry',
  seatNumber: 'seatNumber',
  mealPreference: 'mealPreference',
  specialRequests: 'specialRequests',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  userId: 'userId',
  amount: 'amount',
  currency: 'currency',
  paymentMethod: 'paymentMethod',
  paymentProvider: 'paymentProvider',
  transactionId: 'transactionId',
  status: 'status',
  paidAt: 'paidAt',
  failedReason: 'failedReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  destinationId: 'destinationId',
  bookingId: 'bookingId',
  rating: 'rating',
  title: 'title',
  comment: 'comment',
  isVerified: 'isVerified',
  isPublished: 'isPublished',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PromotionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  code: 'code',
  discountType: 'discountType',
  discountValue: 'discountValue',
  minPurchase: 'minPurchase',
  maxDiscount: 'maxDiscount',
  startDate: 'startDate',
  endDate: 'endDate',
  usageLimit: 'usageLimit',
  usedCount: 'usedCount',
  isActive: 'isActive',
  destinationId: 'destinationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bookingId: 'bookingId',
  title: 'title',
  message: 'message',
  type: 'type',
  isRead: 'isRead',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SystemConfigScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  category: 'category',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminFlightScheduleScalarFieldEnum = {
  id: 'id',
  airlineId: 'airlineId',
  flightNo: 'flightNo',
  origin: 'origin',
  destination: 'destination',
  departure: 'departure',
  arrival: 'arrival',
  basePrice: 'basePrice',
  seats: 'seats',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminPromotionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  code: 'code',
  discountPercent: 'discountPercent',
  startsAt: 'startsAt',
  endsAt: 'endsAt',
  conditions: 'conditions',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Country: 'Country',
  City: 'City',
  Airport: 'Airport',
  Airline: 'Airline',
  AircraftType: 'AircraftType',
  Aircraft: 'Aircraft',
  Destination: 'Destination',
  Flight: 'Flight',
  FlightSchedule: 'FlightSchedule',
  Booking: 'Booking',
  PassengerDetail: 'PassengerDetail',
  Payment: 'Payment',
  Review: 'Review',
  Promotion: 'Promotion',
  Notification: 'Notification',
  SystemConfig: 'SystemConfig',
  AdminFlightSchedule: 'AdminFlightSchedule',
  AdminPromotion: 'AdminPromotion'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Fakhri\\Work\\Portofolio\\Projek\\Web\\Airbook\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Fakhri\\Work\\Portofolio\\Projek\\Web\\Airbook\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id             String         @id @default(cuid())\n  name           String\n  email          String         @unique\n  password       String\n  phone          String?\n  dateOfBirth    DateTime?\n  nationality    String?\n  passportNumber String?\n  role           String         @default(\"USER\")\n  isActive       Boolean        @default(true)\n  isVerified     Boolean        @default(false)\n  createdAt      DateTime       @default(now())\n  updatedAt      DateTime       @updatedAt\n  bookings       Booking[]\n  notifications  Notification[]\n  payments       Payment[]\n  reviews        Review[]\n\n  @@map(\"users\")\n}\n\nmodel Country {\n  id           String        @id @default(cuid())\n  name         String        @unique\n  code         String        @unique\n  continent    String\n  currency     String\n  timezone     String\n  isActive     Boolean       @default(true)\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n  airlines     Airline[]\n  airports     Airport[]\n  cities       City[]\n  destinations Destination[]\n\n  @@index([code])\n  @@map(\"countries\")\n}\n\nmodel City {\n  id           String        @id @default(cuid())\n  name         String\n  countryId    String\n  state        String?\n  population   Int?\n  timezone     String?\n  lat          Float?\n  lon          Float?\n  isActive     Boolean       @default(true)\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n  airports     Airport[]\n  country      Country       @relation(fields: [countryId], references: [id])\n  destinations Destination[]\n\n  @@index([countryId])\n  @@index([name])\n  @@map(\"cities\")\n}\n\nmodel Airport {\n  id               String        @id @default(cuid())\n  name             String\n  iataCode         String?       @unique\n  icaoCode         String?       @unique\n  cityId           String\n  countryId        String\n  municipality     String?\n  lat              Float?\n  lon              Float?\n  elevation        Int?\n  timezone         String?\n  isActive         Boolean       @default(true)\n  createdAt        DateTime      @default(now())\n  updatedAt        DateTime      @updatedAt\n  city             City          @relation(fields: [cityId], references: [id])\n  country          Country       @relation(fields: [countryId], references: [id])\n  destinations     Destination[]\n  arrivalFlights   Flight[]      @relation(\"FlightArrival\")\n  departureFlights Flight[]      @relation(\"FlightDeparture\")\n\n  @@index([countryId])\n  @@index([cityId])\n  @@index([iataCode])\n  @@index([icaoCode])\n  @@index([name])\n  @@map(\"airports\")\n}\n\nmodel Airline {\n  id                   String                @id @default(cuid())\n  name                 String\n  code                 String                @unique\n  icaoCode             String?               @unique\n  countryId            String\n  logo                 String?\n  description          String?\n  website              String?\n  isActive             Boolean               @default(true)\n  createdAt            DateTime              @default(now())\n  updatedAt            DateTime              @updatedAt\n  aircraft             Aircraft[]\n  country              Country               @relation(fields: [countryId], references: [id])\n  flights              Flight[]\n  adminFlightSchedules AdminFlightSchedule[]\n\n  @@index([code])\n  @@index([countryId])\n  @@index([name])\n  @@map(\"airlines\")\n}\n\nmodel AircraftType {\n  id           String     @id @default(cuid())\n  manufacturer String\n  model        String\n  variant      String?\n  capacity     Int\n  range        Int?\n  cruiseSpeed  Int?\n  fuelCapacity Int?\n  isActive     Boolean    @default(true)\n  createdAt    DateTime   @default(now())\n  updatedAt    DateTime   @updatedAt\n  aircraft     Aircraft[]\n\n  @@unique([manufacturer, model, variant])\n  @@index([manufacturer])\n  @@index([model])\n  @@map(\"aircraft_types\")\n}\n\nmodel Aircraft {\n  id             String       @id @default(cuid())\n  registration   String       @unique\n  airlineId      String\n  aircraftTypeId String\n  name           String?\n  isActive       Boolean      @default(true)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n  aircraftType   AircraftType @relation(fields: [aircraftTypeId], references: [id])\n  airline        Airline      @relation(fields: [airlineId], references: [id])\n  flights        Flight[]\n\n  @@index([airlineId])\n  @@index([aircraftTypeId])\n  @@index([registration])\n  @@map(\"aircraft\")\n}\n\nmodel Destination {\n  id           String      @id @default(cuid())\n  name         String\n  cityId       String\n  countryId    String\n  airportId    String\n  description  String?\n  imageUrl     String?\n  category     String\n  rating       Float?\n  isActive     Boolean     @default(true)\n  isFeatured   Boolean     @default(false)\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n  bookingsTo   Booking[]   @relation(\"BookingDestination\")\n  bookingsFrom Booking[]   @relation(\"BookingFromDestination\")\n  airport      Airport     @relation(fields: [airportId], references: [id])\n  city         City        @relation(fields: [cityId], references: [id])\n  country      Country     @relation(fields: [countryId], references: [id])\n  promotions   Promotion[]\n  reviews      Review[]\n\n  @@index([countryId])\n  @@index([cityId])\n  @@index([airportId])\n  @@index([category])\n  @@index([isFeatured])\n  @@map(\"destinations\")\n}\n\nmodel Flight {\n  id                 String           @id @default(cuid())\n  flightNumber       String\n  airlineId          String\n  aircraftId         String\n  departureAirportId String\n  arrivalAirportId   String\n  departureTime      DateTime\n  arrivalTime        DateTime\n  duration           Int\n  distance           Int?\n  status             String           @default(\"SCHEDULED\")\n  gate               String?\n  terminal           String?\n  isActive           Boolean          @default(true)\n  createdAt          DateTime         @default(now())\n  updatedAt          DateTime         @updatedAt\n  bookings           Booking[]\n  flightSchedules    FlightSchedule[]\n  aircraft           Aircraft         @relation(fields: [aircraftId], references: [id])\n  airline            Airline          @relation(fields: [airlineId], references: [id])\n  arrivalAirport     Airport          @relation(\"FlightArrival\", fields: [arrivalAirportId], references: [id])\n  departureAirport   Airport          @relation(\"FlightDeparture\", fields: [departureAirportId], references: [id])\n\n  @@index([airlineId])\n  @@index([aircraftId])\n  @@index([departureAirportId])\n  @@index([arrivalAirportId])\n  @@index([flightNumber])\n  @@index([departureTime])\n  @@index([status])\n  @@map(\"flights\")\n}\n\nmodel FlightSchedule {\n  id             String    @id @default(cuid())\n  flightId       String\n  classType      String\n  availableSeats Int\n  totalSeats     Int\n  basePrice      Float\n  currentPrice   Float\n  isActive       Boolean   @default(true)\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n  bookings       Booking[]\n  flight         Flight    @relation(fields: [flightId], references: [id], onDelete: Cascade)\n\n  @@index([flightId])\n  @@index([classType])\n  @@index([currentPrice])\n  @@map(\"flight_schedules\")\n}\n\nmodel Booking {\n  id                String            @id @default(cuid())\n  bookingReference  String            @unique\n  userId            String\n  flightId          String?\n  flightScheduleId  String?\n  destinationId     String\n  fromDestinationId String\n  departureDate     DateTime\n  returnDate        DateTime?\n  passengerCount    Int\n  bookingClass      String\n  totalPrice        Float\n  taxes             Float             @default(0)\n  fees              Float             @default(0)\n  discountAmount    Float             @default(0)\n  finalPrice        Float\n  status            String            @default(\"PENDING\")\n  paymentStatus     String            @default(\"UNPAID\")\n  createdAt         DateTime          @default(now())\n  updatedAt         DateTime          @updatedAt\n  destination       Destination       @relation(\"BookingDestination\", fields: [destinationId], references: [id])\n  flight            Flight?           @relation(fields: [flightId], references: [id])\n  flightSchedule    FlightSchedule?   @relation(fields: [flightScheduleId], references: [id])\n  fromDestination   Destination       @relation(\"BookingFromDestination\", fields: [fromDestinationId], references: [id])\n  user              User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n  notifications     Notification[]\n  passengers        PassengerDetail[]\n  payments          Payment[]\n\n  @@index([userId])\n  @@index([flightId])\n  @@index([status])\n  @@index([paymentStatus])\n  @@index([departureDate])\n  @@index([bookingReference])\n  @@map(\"bookings\")\n}\n\nmodel PassengerDetail {\n  id              String    @id @default(cuid())\n  bookingId       String\n  title           String\n  firstName       String\n  lastName        String\n  dateOfBirth     DateTime\n  nationality     String\n  passportNumber  String?\n  passportExpiry  DateTime?\n  seatNumber      String?\n  mealPreference  String?\n  specialRequests String?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n  booking         Booking   @relation(fields: [bookingId], references: [id], onDelete: Cascade)\n\n  @@index([bookingId])\n  @@map(\"passenger_details\")\n}\n\nmodel Payment {\n  id              String    @id @default(cuid())\n  bookingId       String\n  userId          String\n  amount          Float\n  currency        String    @default(\"IDR\")\n  paymentMethod   String\n  paymentProvider String?\n  transactionId   String?   @unique\n  status          String    @default(\"PENDING\")\n  paidAt          DateTime?\n  failedReason    String?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n  booking         Booking   @relation(fields: [bookingId], references: [id], onDelete: Cascade)\n  user            User      @relation(fields: [userId], references: [id])\n\n  @@index([bookingId])\n  @@index([userId])\n  @@index([status])\n  @@index([transactionId])\n  @@map(\"payments\")\n}\n\nmodel Review {\n  id            String       @id @default(cuid())\n  userId        String\n  destinationId String?\n  bookingId     String?\n  rating        Int\n  title         String?\n  comment       String?\n  isVerified    Boolean      @default(false)\n  isPublished   Boolean      @default(true)\n  createdAt     DateTime     @default(now())\n  updatedAt     DateTime     @updatedAt\n  destination   Destination? @relation(fields: [destinationId], references: [id])\n  user          User         @relation(fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([destinationId])\n  @@index([rating])\n  @@index([isPublished])\n  @@map(\"reviews\")\n}\n\nmodel Promotion {\n  id            String       @id @default(cuid())\n  title         String\n  description   String?\n  code          String?      @unique\n  discountType  String\n  discountValue Float\n  minPurchase   Float?\n  maxDiscount   Float?\n  startDate     DateTime\n  endDate       DateTime\n  usageLimit    Int?\n  usedCount     Int          @default(0)\n  isActive      Boolean      @default(true)\n  destinationId String?\n  createdAt     DateTime     @default(now())\n  updatedAt     DateTime     @updatedAt\n  destination   Destination? @relation(fields: [destinationId], references: [id])\n\n  @@index([code])\n  @@index([startDate])\n  @@index([endDate])\n  @@index([isActive])\n  @@map(\"promotions\")\n}\n\nmodel Notification {\n  id        String   @id @default(cuid())\n  userId    String\n  bookingId String?\n  title     String\n  message   String\n  type      String\n  isRead    Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  booking   Booking? @relation(fields: [bookingId], references: [id])\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([bookingId])\n  @@index([isRead])\n  @@index([type])\n  @@map(\"notifications\")\n}\n\nmodel SystemConfig {\n  id          String   @id @default(cuid())\n  key         String   @unique\n  value       String\n  category    String\n  description String?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@index([key])\n  @@index([category])\n  @@map(\"system_configs\")\n}\n\n// Admin Flight Schedules - Simple structure for admin panel\nmodel AdminFlightSchedule {\n  id          String   @id @default(cuid())\n  airlineId   String\n  flightNo    String\n  origin      String // IATA code like \"CGK\"\n  destination String // IATA code like \"DPS\"\n  departure   DateTime // Full datetime\n  arrival     DateTime // Full datetime\n  basePrice   Float\n  seats       Int\n  status      String   @default(\"ON_TIME\") // \"ON_TIME\" | \"DELAYED\" | \"CANCELLED\"\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  airline     Airline  @relation(fields: [airlineId], references: [id], onDelete: Cascade)\n\n  @@index([airlineId])\n  @@index([flightNo])\n  @@index([origin])\n  @@index([destination])\n  @@index([departure])\n  @@index([status])\n  @@map(\"admin_flight_schedules\")\n}\n\n// Admin Promotions - Simple structure for admin panel\nmodel AdminPromotion {\n  id              String   @id @default(cuid())\n  title           String\n  code            String   @unique\n  discountPercent Int // 0-100\n  startsAt        DateTime\n  endsAt          DateTime\n  conditions      String?\n  active          Boolean  @default(true)\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  @@index([code])\n  @@index([startsAt])\n  @@index([endsAt])\n  @@index([active])\n  @@map(\"admin_promotions\")\n}\n",
  "inlineSchemaHash": "6229df13ad17374a48727b149c0661551a04e161a483923eaf1dfb39f881a4d9",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nationality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passportNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"}],\"dbName\":\"users\"},\"Country\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"continent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"airlines\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AirlineToCountry\"},{\"name\":\"airports\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"AirportToCountry\"},{\"name\":\"cities\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToCountry\"},{\"name\":\"destinations\",\"kind\":\"object\",\"type\":\"Destination\",\"relationName\":\"CountryToDestination\"}],\"dbName\":\"countries\"},\"City\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"population\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lon\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"airports\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"AirportToCity\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CityToCountry\"},{\"name\":\"destinations\",\"kind\":\"object\",\"type\":\"Destination\",\"relationName\":\"CityToDestination\"}],\"dbName\":\"cities\"},\"Airport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iataCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icaoCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"municipality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lon\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"elevation\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"AirportToCity\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"AirportToCountry\"},{\"name\":\"destinations\",\"kind\":\"object\",\"type\":\"Destination\",\"relationName\":\"AirportToDestination\"},{\"name\":\"arrivalFlights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"FlightArrival\"},{\"name\":\"departureFlights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"FlightDeparture\"}],\"dbName\":\"airports\"},\"Airline\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icaoCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToAirline\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"AirlineToCountry\"},{\"name\":\"flights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"AirlineToFlight\"},{\"name\":\"adminFlightSchedules\",\"kind\":\"object\",\"type\":\"AdminFlightSchedule\",\"relationName\":\"AdminFlightScheduleToAirline\"}],\"dbName\":\"airlines\"},\"AircraftType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manufacturer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"range\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cruiseSpeed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fuelCapacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToAircraftType\"}],\"dbName\":\"aircraft_types\"},\"Aircraft\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"airlineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aircraftTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aircraftType\",\"kind\":\"object\",\"type\":\"AircraftType\",\"relationName\":\"AircraftToAircraftType\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AircraftToAirline\"},{\"name\":\"flights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"AircraftToFlight\"}],\"dbName\":\"aircraft\"},\"Destination\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"airportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bookingsTo\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingDestination\"},{\"name\":\"bookingsFrom\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingFromDestination\"},{\"name\":\"airport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"AirportToDestination\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToDestination\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToDestination\"},{\"name\":\"promotions\",\"kind\":\"object\",\"type\":\"Promotion\",\"relationName\":\"DestinationToPromotion\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"DestinationToReview\"}],\"dbName\":\"destinations\"},\"Flight\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flightNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"airlineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aircraftId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"departureAirportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"arrivalAirportId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"departureTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"arrivalTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"distance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"terminal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToFlight\"},{\"name\":\"flightSchedules\",\"kind\":\"object\",\"type\":\"FlightSchedule\",\"relationName\":\"FlightToFlightSchedule\"},{\"name\":\"aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToFlight\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AirlineToFlight\"},{\"name\":\"arrivalAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"FlightArrival\"},{\"name\":\"departureAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"FlightDeparture\"}],\"dbName\":\"flights\"},\"FlightSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flightId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availableSeats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalSeats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currentPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToFlightSchedule\"},{\"name\":\"flight\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"FlightToFlightSchedule\"}],\"dbName\":\"flight_schedules\"},\"Booking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flightId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flightScheduleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"destinationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromDestinationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"departureDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"returnDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"passengerCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookingClass\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"taxes\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fees\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"finalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"destination\",\"kind\":\"object\",\"type\":\"Destination\",\"relationName\":\"BookingDestination\"},{\"name\":\"flight\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"BookingToFlight\"},{\"name\":\"flightSchedule\",\"kind\":\"object\",\"type\":\"FlightSchedule\",\"relationName\":\"BookingToFlightSchedule\"},{\"name\":\"fromDestination\",\"kind\":\"object\",\"type\":\"Destination\",\"relationName\":\"BookingFromDestination\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BookingToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"BookingToNotification\"},{\"name\":\"passengers\",\"kind\":\"object\",\"type\":\"PassengerDetail\",\"relationName\":\"BookingToPassengerDetail\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"BookingToPayment\"}],\"dbName\":\"bookings\"},\"PassengerDetail\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nationality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passportNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passportExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"seatNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mealPreference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialRequests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToPassengerDetail\"}],\"dbName\":\"passenger_details\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"failedReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToPayment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentToUser\"}],\"dbName\":\"payments\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"destinationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"destination\",\"kind\":\"object\",\"type\":\"Destination\",\"relationName\":\"DestinationToReview\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"}],\"dbName\":\"reviews\"},\"Promotion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"minPurchase\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxDiscount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usageLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usedCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"destinationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"destination\",\"kind\":\"object\",\"type\":\"Destination\",\"relationName\":\"DestinationToPromotion\"}],\"dbName\":\"promotions\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToNotification\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"SystemConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"system_configs\"},\"AdminFlightSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"airlineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flightNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"origin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"destination\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"departure\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"arrival\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"seats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AdminFlightScheduleToAirline\"}],\"dbName\":\"admin_flight_schedules\"},\"AdminPromotion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountPercent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conditions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"admin_promotions\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

